---
- name: Add repository for MariaDB
  template:
    src: mariadb.list.j2
    dest: /etc/apt/sources.list.d/mariadb.list
    owner: root
    group: root
    mode: 0644

# - name: install pip
#   apt:
#     name: pip
#     state: present

- name: Add keys for repository
  apt_key:
    keyserver: hkp://keyserver.ubuntu.com:80
    id: '0xF1656F24C74CD1D8'
    state: present

- name: Install python module
  apt: name=python3-pymysql state=latest


- name: Install MariaDB.
  apt:
    name:
      - mariadb-server
      - mariadb-client
    state: present
    update_cache: yes
  #  cache_valid_time: "{{ aptget_update_cache_valid_time }}"

- name: Start and enable MariaDB service
  service:
    name: "{{ mariadb_service_name }}"
    state: started
    enabled: yes

- name: Copy ~/.my.cnf to root.
  template:
    src: my.cnf.j2
    dest: /root/.my.cnf
    owner: root
    group: root
    mode: 0600

- name: Instalamos el archivo de configuración de red.
  template:
    src: settings.cnf.j2
    dest: /etc/mysql/mariadb.conf.d/settings.cnf
    owner: root
    group: root
    mode: 0644
  notify: Reiniciar mariadb

- name: Actualizamos la clave de root.
  mysql_user:
    name: root
    host: "{{ item }}"
    password: "{{ mariadb_root_password }}"
    state: present
    login_unix_socket: /var/run/mysqld/mysqld.sock
  with_items:
    - 127.0.0.1
    - ::1
    - localhost


- name: Delete test database
  mysql_db:
    name: test
    state: absent
    login_unix_socket: /var/run/mysqld/mysqld.sock

- name: Delete anonymous users
  mysql_user:
    name: ''
    host: "{{ item }}"
    state: absent
    login_unix_socket: /var/run/mysqld/mysqld.sock
  with_items:
    - localhost

- name: Creamos las Bases de Datos.
  mysql_db:
    name: "{{ item }}"
    state: present
    login_unix_socket: /var/run/mysqld/mysqld.sock
  with_items:
    - "{{ mariadb_databases }}"


- name: Creamos los usuarios de Bases de Datos.
  mysql_user:
    name: "{{ item.value.name }}"
    password: "{{ item.value.password }}"
    priv: "{{ item.value.priv }}"
    state: present
    login_unix_socket: /var/run/mysqld/mysqld.sock
  with_dict: "{{ mariadb_users }}"


- name: Creamos el directorio de utilidades.
  file:
    path: "{{ mariadb_server_path_utiles }}"
    state: directory
    owner: root
    group: root
    mode: 0700
  when: mariadb_utiles_bd

# - name: Instalamos MySQLTuner.
#   get_url:
#     url: https://raw.githubusercontent.com/major/MySQLTuner-perl/master/mysqltuner.pl
#     dest: "{{ mariadb_server_path_utiles }}/mysqltuner.pl"
#     owner: root
#     group: root
#     mode: 0740
#   when: mariadb_utiles_bd

# - name: Instalamos el script de optimización de BD.
#   template:
#     src: optimiza_bd.sh.j2
#     dest: "{{ mariadb_server_path_utiles }}/optimiza_bd_{{ item }}.sh"
#     owner: root
#     group: root
#     mode: 0750
#   with_items:
#     - "{{ mariadb_databases }}"
#   when: mariadb_utiles_bd

# - name: Instalamos el script de backups de BD.
#   template:
#     src: copia_bd.sh.j2
#     dest: "{{ mariadb_server_path_utiles }}/copia_bd_{{ item }}.sh"
#     owner: root
#     group: root
#     mode: 0750
#   with_items:
#     - "{{ mariadb_databases }}"
#   when: mariadb_utiles_bd

# - name: Creamos el directorio de Backups de la BD.
#   file:
#     path: "{{ mariadb_path_backups }}"
#     state: directory
#     owner: root
#     group: root
#     mode: 0640
#   when: mariadb_utiles_bd

# - name: Añadimos las tareas cron del BackUp de BD.
#   cron:
#     name: "BackUp de BD {{ item }}"
#     minute: "{{ mariadb_cron_backup_db.minute }}"
#     hour: "{{ mariadb_cron_backup_db.hour }}"
#     day: "{{ mariadb_cron_backup_db.day }}"
#     weekday: "{{ mariadb_cron_backup_db.weekday }}"
#     job: "{{ mariadb_server_path_utiles }}/copia_bd_{{ item }}.sh"
#   with_items:
#     - "{{ mariadb_databases }}"
#   when: mariadb_cron_backup

# - name: Añadimos las tareas cron de Optimización de BD.
#   cron:
#     name: "Optimización de BD {{ item }}"
#     minute: "{{ mariadb_cron_optimiza_db.minute }}"
#     hour: "{{ mariadb_cron_optimiza_db.hour }}"
#     day: "{{ mariadb_cron_optimiza_db.day }}"
#     weekday: "{{ mariadb_cron_optimiza_db.weekday }}"
#     job: "{{ mariadb_server_path_utiles }}/optimiza_bd_{{ item }}.sh"
#   with_items:
#     - "{{ mariadb_databases }}"
#   when: mariadb_cron_optimizacion
